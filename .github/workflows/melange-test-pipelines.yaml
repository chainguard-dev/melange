name: Test melange test command

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions: {}

jobs:
  build-melange:
    name: Build melange and add to artifact cache
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: './go.mod'
          check-latest: true

      - name: build
        run: |
          make melange

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: melange-${{ github.run_id }}
          path: ${{ github.workspace }}/melange
          retention-days: 1

  test-packages:
    name: Test packages
    needs:
      - build-melange
    runs-on: ubuntu-latest-8-core

    permissions:
      contents: read

    steps:
      - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Grab the melange we uploaded above, and install it.
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: melange-${{ github.run_id }}
          path: ${{ github.workspace }}/.melange-dir
          run-id: ${{ github.run_id }}

      - run: |
          sudo mv ${{ github.workspace }}/.melange-dir/melange /usr/bin/melange
          sudo chmod a+x /usr/bin/melange
          melange version

      - run: |
          sudo apt-get -y install bubblewrap
      - uses: ./.github/actions/setup-bubblewrap

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: './go.mod'
          check-latest: true

      - name: Download kernel for VMs
        run: |
          KERNEL_PKG="$(curl -sL https://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/APKINDEX.tar.gz | tar -Oxz APKINDEX | awk -F':' '$1 == "P" {printf "%s-", $2} $1 == "V" {printf "%s.apk\n", $2}' | grep "linux-virt" | grep -v dev)"
          curl -LSo linux-virt.apk "https://dl-cdn.alpinelinux.org/alpine/edge/main/x86_64/$KERNEL_PKG"
          mkdir -p /tmp/kernel
          tar -xf ./linux-virt.apk -C /tmp/kernel/

      - name: Install QEMU/KVM
        run: |
          sudo apt-get update
          sudo apt-get -y install qemu-system-x86-64 qemu-kvm

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run e2e-tests
        run: |
          make \
            QEMU_KERNEL_IMAGE=/tmp/kernel/boot/vmlinuz-virt \
            QEMU_KERNEL_MODULES=/tmp/kernel/lib/modules/ \
            test-e2e
