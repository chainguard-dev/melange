name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-melange:
    name: Build melange and add to artifact cache
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version: '1.21'
          check-latest: true

      - name: build
        run: |
          make melange

      - uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
        with:
          name: melange-${{ github.run_id }}
          path: ${{ github.workspace }}/melange
          retention-days: 1

  build-packages:
    name: Build packages
    needs:
      - build-melange
    # TODO: Set up a larger runner for this.
    runs-on: ubuntu-latest

    permissions:
      contents: read

    # This is a list of packages which covers basic and exotic uses of
    # the built-in pipelines.  Goal is to balance efficiency while also
    # exercising Melange with real-world package builds.
    # Feel free to add additional packages to this matrix which exercise
    # Melange in new ways (e.g. new pipelines, etc.)
    strategy:
      fail-fast: false
      matrix:
        package:
          - hello-wolfi
          - glibc
          - tini
          - lzo
          - bubblewrap
          - gdk-pixbuf
          - gitsign
          - guac
          - mdbook
          - s3cmd
          - perl-yaml-syck
          - xmlto
          - ncurses

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: wolfi-dev/os

      - uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4.1.1
        with:
          name: melange-${{ github.run_id }}
          path: ${{ github.workspace }}/.melange-dir
          run-id: ${{ github.run_id }}

      - run: |
          sudo mv ${{ github.workspace }}/.melange-dir/melange /usr/bin/melange
          sudo chmod a+x /usr/bin/melange
          melange version

      - run: |
          sudo apt-get -y install bubblewrap

      - run: |
          make SHELL="/bin/bash" MELANGE="sudo melange" package/${{ matrix.package }}

      - run: |
          # glibc has tons of subpackages such that fetching the APKINDEX over and over again adds almost 3 minutes to CI time.
          # To mitigate this, instead of running a separate docker container for each package, we do them all in one script.
          # However, because we no longer have an isolated container for each run, we use the --simulate flag to avoid conflicts.
          # This means we miss out on some coverage for glibc (e.g. actually installing the packages), but that's too slow.
          if [ "${{ matrix.package }}" = "glibc" ]; then
            echo "#!/bin/sh" >> entrypoint.sh
            for f in packages/x86_64/${{ matrix.package }}-*.apk; do
              echo "apk add --simulate --allow-untrusted /work/$f" >> entrypoint.sh
            done

            chmod +x entrypoint.sh
            docker run --rm -v $(pwd):/work cgr.dev/chainguard/wolfi-base /work/entrypoint.sh
          else
            for f in packages/x86_64/${{ matrix.package }}-*.apk; do
              docker run --rm -v $(pwd):/work cgr.dev/chainguard/wolfi-base apk add --allow-untrusted /work/$f
            done
          fi
