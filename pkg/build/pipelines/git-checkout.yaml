name: Check out sources from git

needs:
  packages:
    - git

inputs:
  repository:
    description: |
      The repository to check out sources from.
    required: true

  destination:
    description: |
      The path to check out the sources to.
    default: .

  depth:
    description: |
      The depth to use when cloning.
    default: 1

  branch:
    description: |
      The branch to check out, otherwise HEAD is checked out.

  tag:
    description: |
      The tag to check out.

  expected-commit:
    description: |
      The expected commit hash

pipeline:
  - runs: |
      if [ -z "${{inputs.branch}}" ] && [ -z "${{inputs.tag}}" ]; then
        echo "Warning (git-checkout): you have not specified a branch or tag."
      fi

      [ -n '${{inputs.branch}}' ] && clone_target='--branch ${{inputs.branch}}'
      [ -n '${{inputs.tag}}' ] && clone_target='--branch ${{inputs.tag}}'

      workdir=$(mktemp -d)
      mkdir -p '${{inputs.destination}}'
      clone_fullpath=$(realpath '${{inputs.destination}}')

      git config --global --add safe.directory $workdir
      git config --global --add safe.directory $clone_fullpath
      git clone $clone_target --depth '${{inputs.depth}}' '${{inputs.repository}}' $workdir

      cd $workdir
      tar -c . | (cd $clone_fullpath && tar -x)
      rm -rf $workdir
      cd $clone_fullpath
      git config --global --add safe.directory $clone_fullpath

      if [ -z "${{inputs.expected-commit}}" ]; then
        echo "Warning (git-checkout): no expected-commit"
      else
        [ -n '${{inputs.branch}}' ] && remote_commit=$(git rev-list -1 origin/"${{inputs.branch}}")
        [ -n '${{inputs.tag}}' ] && remote_commit=$(git rev-list -1 "${{inputs.tag}}")

        if [[ '${{inputs.expected-commit}}' != "$remote_commit" ]]; then
          echo "Error (git-checkout): expect commit ${{inputs.expected-commit}}, got $remote_commit"
          exit 1
        fi
      fi
